[gcode_macro HOT_BED_MESH_PROBE]
gcode:
    CLEAR_PAUSE
    M190 S70                        ; set bed temperature to 60C and wait
    # M104 S140                       ; set nozzel temp to XC and wait
    G28                             ; home all axes
    G1 Z20 F240                     ; raise nozzel off bed
    BED_MESH_CALIBRATE              ; start the bed mesh calibration
    BED_MESH_PROFILE SAVE=HOT       ; save the bed mesh in the profile HOT
    SAVE_CONFIG                     ; save the config and write the bed mesh to print

[gcode_macro START_PRINT]
gcode:
    {% set B_TEMP = params.BED_TEMP|default(60)|float %}
    {% set E_TEMP = params.EXTRUDER_TEMP|default(215)|float %}
    # Set relative extrusion and absoloute movement
    M83
    G90

    M117 Homing...
    # Preheat bed to 80%
    M140 S{B_TEMP|float * 0.9}
    G28
    # Moving to pre-start position
    G0 Z25
    G0 X-10 Y0 F3000

    M117 Preheating ...
    # Wait for bed to be heated to 80% of actual temperature before heating nozzle
    {% if printer.heater_bed.temperature < B_TEMP|float * 0.9 %}
        M190 S{B_TEMP|float * 0.9} 
    {% endif %}
    
    M117 Heating to first layer ...
    M104 S{E_TEMP}
    M190 S{B_TEMP}
    M109 S{E_TEMP}

    # Reset the G-Code Z offset (adjust Z offset if needed)
    # SET_GCODE_OFFSET Z=0.0 MOVE=1
  
    # Use the bed mesh 
    BED_MESH_PROFILE LOAD=default
    
    # Prime line
    PRIME_LINE
    M117 Printing...

[gcode_macro PRIME_LINE]
gcode:
  M117 Priming the nozzle
  G92 E0 ; reset extruder
  G1 Z2.0 F3000
  G1 X10 Y50 Z0.28 F5000 
  G1 X10 Y200 Z0.28 E15 F1500.0 ; intro line
  G1 Z2 F3000 ; Move Z Axis up little 
  G1 Z0.2 F3000 ; Move over and stick remainings to the bed
  G92 E0 ; reset extruder distance      

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0

    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    {% if printer.toolhead.position.z < printer.toolhead.axis_maximum.z - 20 %}
        G1 Z{ printer.toolhead.position.z + 10 } E-1 F600 ; Move print head up
        # G1 Z{ printer.toolhead.position.z + 10 } F600 ; Move print head up
    {% endif %}
    G1 X-10 Y{ printer.toolhead.axis_maximum.y * 0.5 } F3000 ; present print
    {% if printer.toolhead.position.z < printer.toolhead.axis_maximum.z * 0.7 %}
        G1 Z{ printer.toolhead.axis_maximum.z * 0.7 } F3000 ; Move print head further up
    {% endif %}

    # Disable steppers
    M84

[pause_resume]

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {% set X = params.X|default(5) %}
    {% set Y = params.Y|default(5) %}
    {% set Z = params.Z|default(10) %}
    {% set E = params.E|default(1) %}

    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F1900
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000

[gcode_macro CLEAR_PAUSE]
rename_existing: BASE_CLEAR_PAUSE
gcode:
    {% set X = params.X|default(5) %}
    {% set Y = params.Y|default(205) %}
    {% set Z = params.Z|default(10) %}
    {% set E = params.E|default(1) %}

    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F1900
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% set E = params.E|default(1) %}

    G91
    G1 E{E} F1900
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro MAINTENANCE]
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    G1 X110 Y5 Z66.5 F600
    M84

# Park toolhead
[gcode_macro M125]
gcode:
    SAVE_GCODE_STATE NAME=parking
    M117 Parking toolhead
    G91
    G1 Z5 F600 # move up 5 mm
    G90
    G1 X25 Y0 F4000 # move to park position
    RESTORE_GCODE_STATE NAME=parking

# LOW_TEMP_CHECK checks if there is a setpoint for the extruder.
# - If this setpoint is reached, continue. 
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@200)
[gcode_macro LOW_TEMP_CHECK]
gcode: 
    {% set T = params.T|default(215) %}

    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M117 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T %}  # heat to T.
            M117 No setpoint, heating to {T}.
            M109 S{T}
        {% endif %}
    {% endif %}
    

# load filament alias
[gcode_macro M701]
gcode:
    LOAD_FILAMENT

# load filament
[gcode_macro LOAD_FILAMENT]
gcode:
    {% set E = params.E|default(400) %}

    SAVE_GCODE_STATE NAME=loading_filament
    M117 Loading Filament
    G91 # set relative
    G92 E0.0
    LOW_TEMP_CHECK
    G1 E15 F120  # pull filament slowly into extruder
    G1 E{E} F1500  # length of bowden tube till cold-end (~420mm) 
    G1 E25 F120  # some extra to prime the nozzle --> slower 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=loading_filament


# unload filament alias
[gcode_macro M702]
gcode:
    UNLOAD_FILAMENT

# unload filament
[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set E = params.E|default(10) %}

    SAVE_GCODE_STATE NAME=unloading_filament
    M117 Unloading Filament 
    LOW_TEMP_CHECK
    G91 # set relative
    G1 E8 F100
    G1 E2 F300
    G1 E-10 F1800
    G1 E-{E} F1500 # the E is the length of the bowden tube (420mm) 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=unloading_filament

# filament change 
[gcode_macro M600]
gcode:
    M117 Filament Change
    SAVE_GCODE_STATE NAME=filament_change
    BASE_PAUSE
    LOW_TEMP_CHECK
    G91 # relative
    G1 E-1 F300 # retract 1
    M125 # park
    UNLOAD_FILAMENT # unload

    M117 New filament
    COUNTDOWN TIME=25 MSG="Switch"
    LOAD_FILAMENT
    COUNTDOWN TIME=10 MSG="Clean"
    BASE_RESUME
    M117 Resuming
    RESTORE_GCODE_STATE NAME=filament_change
    M117 Printing..

[gcode_macro COUNTDOWN]
gcode: 
    {% set MSG = params.MSG|default(Time)|string %}
    {% set TIME = params.TIME|default(10) %}

    # countdown 
    {% for s in range(TIME|int, 0, -1) %}
        # dwell 1 second
        G4 P1000
        # echo
        M117 {params.MSG} {s}sec
    {% endfor %}
